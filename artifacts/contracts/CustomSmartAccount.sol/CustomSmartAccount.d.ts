// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface CustomSmartAccount$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "CustomSmartAccount",
  "sourceName": "contracts/CustomSmartAccount.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ECDSAInvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "ECDSAInvalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "ECDSAInvalidSignatureS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x6080604052348015600e575f5ffd5b50604051610721380380610721833981016040819052602b91604e565b5f80546001600160a01b0319166001600160a01b03929092169190911790556079565b5f60208284031215605d575f5ffd5b81516001600160a01b03811681146072575f5ffd5b9392505050565b61069b806100865f395ff3fe608060405260043610610041575f3560e01c80631626ba7e1461004c5780638da5cb5b14610089578063affed0e0146100bf578063b61d27f6146100e2575f5ffd5b3661004857005b5f5ffd5b348015610057575f5ffd5b5061006b61006636600461049c565b610103565b6040516001600160e01b031990911681526020015b60405180910390f35b348015610094575f5ffd5b505f546100a7906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b3480156100ca575f5ffd5b506100d460015481565b604051908152602001610080565b3480156100ed575f5ffd5b506101016100fc366004610559565b61013d565b005b5f5f61010f8484610293565b5f549091506001600160a01b0380831691161461012c575f610135565b630b135d3f60e11b5b949350505050565b5f546001600160a01b031633146101945760405162461bcd60e51b81526020600482015260166024820152754f6e6c79206f776e65722063616e206578656375746560501b60448201526064015b60405180910390fd5b5f846001600160a01b03168484846040516101b09291906105e9565b5f6040518083038185875af1925050503d805f81146101ea576040519150601f19603f3d011682016040523d82523d5f602084013e6101ef565b606091505b50509050806102335760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161018b565b846001600160a01b03167fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f858585604051610270939291906105f8565b60405180910390a260018054905f6102878361062d565b91905055505050505050565b5f5f5f5f6102a186866102bb565b9250925092506102b18282610304565b5090949350505050565b5f5f5f83516041036102f2576020840151604085015160608601515f1a6102e4888285856103c0565b9550955095505050506102fd565b505081515f91506002905b9250925092565b5f82600381111561031757610317610651565b03610320575050565b600182600381111561033457610334610651565b036103525760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561036657610366610651565b036103875760405163fce698f760e01b81526004810182905260240161018b565b600382600381111561039b5761039b610651565b036103bc576040516335e2f38360e21b81526004810182905260240161018b565b5050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156103f957505f9150600390508261047e565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561044a573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b03811661047557505f92506001915082905061047e565b92505f91508190505b9450945094915050565b634e487b7160e01b5f52604160045260245ffd5b5f5f604083850312156104ad575f5ffd5b82359150602083013567ffffffffffffffff8111156104ca575f5ffd5b8301601f810185136104da575f5ffd5b803567ffffffffffffffff8111156104f4576104f4610488565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561052357610523610488565b60405281815282820160200187101561053a575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f5f5f6060858703121561056c575f5ffd5b84356001600160a01b0381168114610582575f5ffd5b935060208501359250604085013567ffffffffffffffff8111156105a4575f5ffd5b8501601f810187136105b4575f5ffd5b803567ffffffffffffffff8111156105ca575f5ffd5b8760208284010111156105db575f5ffd5b949793965060200194505050565b818382375f9101908152919050565b83815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f6001820161064a57634e487b7160e01b5f52601160045260245ffd5b5060010190565b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220d8857c3191a0df7ba82f9fefafa3905deb1543348bfcd7ccd6e1e2e553cba34064736f6c634300081c0033",
  "deployedBytecode": "0x608060405260043610610041575f3560e01c80631626ba7e1461004c5780638da5cb5b14610089578063affed0e0146100bf578063b61d27f6146100e2575f5ffd5b3661004857005b5f5ffd5b348015610057575f5ffd5b5061006b61006636600461049c565b610103565b6040516001600160e01b031990911681526020015b60405180910390f35b348015610094575f5ffd5b505f546100a7906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b3480156100ca575f5ffd5b506100d460015481565b604051908152602001610080565b3480156100ed575f5ffd5b506101016100fc366004610559565b61013d565b005b5f5f61010f8484610293565b5f549091506001600160a01b0380831691161461012c575f610135565b630b135d3f60e11b5b949350505050565b5f546001600160a01b031633146101945760405162461bcd60e51b81526020600482015260166024820152754f6e6c79206f776e65722063616e206578656375746560501b60448201526064015b60405180910390fd5b5f846001600160a01b03168484846040516101b09291906105e9565b5f6040518083038185875af1925050503d805f81146101ea576040519150601f19603f3d011682016040523d82523d5f602084013e6101ef565b606091505b50509050806102335760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161018b565b846001600160a01b03167fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f858585604051610270939291906105f8565b60405180910390a260018054905f6102878361062d565b91905055505050505050565b5f5f5f5f6102a186866102bb565b9250925092506102b18282610304565b5090949350505050565b5f5f5f83516041036102f2576020840151604085015160608601515f1a6102e4888285856103c0565b9550955095505050506102fd565b505081515f91506002905b9250925092565b5f82600381111561031757610317610651565b03610320575050565b600182600381111561033457610334610651565b036103525760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561036657610366610651565b036103875760405163fce698f760e01b81526004810182905260240161018b565b600382600381111561039b5761039b610651565b036103bc576040516335e2f38360e21b81526004810182905260240161018b565b5050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156103f957505f9150600390508261047e565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561044a573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b03811661047557505f92506001915082905061047e565b92505f91508190505b9450945094915050565b634e487b7160e01b5f52604160045260245ffd5b5f5f604083850312156104ad575f5ffd5b82359150602083013567ffffffffffffffff8111156104ca575f5ffd5b8301601f810185136104da575f5ffd5b803567ffffffffffffffff8111156104f4576104f4610488565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561052357610523610488565b60405281815282820160200187101561053a575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f5f5f6060858703121561056c575f5ffd5b84356001600160a01b0381168114610582575f5ffd5b935060208501359250604085013567ffffffffffffffff8111156105a4575f5ffd5b8501601f810187136105b4575f5ffd5b803567ffffffffffffffff8111156105ca575f5ffd5b8760208284010111156105db575f5ffd5b949793965060200194505050565b818382375f9101908152919050565b83815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f6001820161064a57634e487b7160e01b5f52601160045260245ffd5b5060010190565b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220d8857c3191a0df7ba82f9fefafa3905deb1543348bfcd7ccd6e1e2e553cba34064736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "CustomSmartAccount",
    constructorArgs: [_owner: AbiParameterToPrimitiveType<{"name":"_owner","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<CustomSmartAccount$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/CustomSmartAccount.sol:CustomSmartAccount",
    constructorArgs: [_owner: AbiParameterToPrimitiveType<{"name":"_owner","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<CustomSmartAccount$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "CustomSmartAccount",
    constructorArgs: [_owner: AbiParameterToPrimitiveType<{"name":"_owner","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<CustomSmartAccount$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/CustomSmartAccount.sol:CustomSmartAccount",
    constructorArgs: [_owner: AbiParameterToPrimitiveType<{"name":"_owner","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<CustomSmartAccount$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "CustomSmartAccount",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<CustomSmartAccount$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/CustomSmartAccount.sol:CustomSmartAccount",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<CustomSmartAccount$Type["abi"]>>;
}
